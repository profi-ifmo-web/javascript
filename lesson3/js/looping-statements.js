'use strict';
// looping statements
// циклы

// циклы позволяют выполнять однотипные действие необходимое
// количество раз

// цикл с постусловием do while

// необходимо запрашивать пароль пользователя,
// пока он не введет 'admin'
let password = null;
do {
    // тело цикла один раз выполнится в любом случае
    // (до проверки условия).
    // дальнейшее его выполнение зависит от истинности условия
    password = prompt("Введите пароль");
    console.log(password);
} while (password !== 'admin'); // условие выполнения цикла

// 1. первое выполнение тела цикла
// 2. проверка условия:
// если условие истинно, снова выполняется тело цикла
// если условие ложно, цикл прерывается

// prompt(сообщение) - модальное окно, приостанавливает  выполнение скрипта
// Выводит 'сообщение' и
// возвращает то, что ввел пользователь (всегда тип String),
// либо null, если пользователь нажал 'Отмена'

// цикл с предусловием while

// вывести в консоль все нечетные числа последовательности n,m.
// значение n и m менять нельзя
let n = 34, m = 67;
let i = n;
//34, 35, 36, 37, .... 62, 63, 64, 65, 66, 67
while (i <= m) { // условие
    // тело цикла выполняется, пока условие i < m верно
    if (i % 2 !== 0) {
        console.log(`нечетное число: ${i}`);
    }
    i++;
}

// вывести в консоль все числа от [1 до 6]
i = 1;
while (i < 7) {
    console.log(i);
    i++;
}

// цикл for
// дано 5 попыток, чтобы угадать число до 1000
// 5 4 3 2 1
// Math.random() ->  [0 ; 1)
let num = Math.floor(Math.random() * 1000);

for (let attemptCount = 5; attemptCount >= 1; attemptCount--){
    // тело цикла
    let answer = +prompt("Введите число");
    if (answer === num){
        alert("Вы угадали!");
        break; // директива break - выход из цикла
    }
    alert(`Остальсь попыток: ${attemptCount - 1}`)
}

// for (инициализация; условие; обновление){тело цикла}
// 1. 'инициализация' выполняется только 1 раз (при входе в цикл)
// 2. проверка 'условия' выполняется каждый раз перед выполнением
// 'тела цикла'
// 3. 'тело цикла' выполняется пока истинно 'условие'
// 4. 'обновление' выполняется каждый раз после выполнения
// тела цикла и до проверки условия


